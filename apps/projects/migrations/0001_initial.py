# Generated by Django 5.0.6 on 2025-08-11 03:00

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('step_type', models.CharField(choices=[('qc', 'Quality Control'), ('normalization', 'Normalization'), ('hvg', 'Highly Variable Genes'), ('pca', 'Principal Component Analysis'), ('umap', 'UMAP Embedding'), ('clustering', 'Clustering'), ('batch_correction', 'Batch Correction'), ('annotation', 'Cell Type Annotation'), ('differential', 'Differential Expression')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('runner_image', models.CharField(default='bioai/runner:latest', max_length=200)),
                ('runner_command', models.TextField()),
                ('default_params', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['step_type'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action_type', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('execute', 'Execute'), ('export', 'Export'), ('rollback', 'Rollback')], max_length=20)),
                ('object_type', models.CharField(max_length=50)),
                ('object_id', models.UUIDField()),
                ('changes', models.JSONField(blank=True, default=dict)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization_id', models.CharField(blank=True, max_length=100, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('sample_type', models.CharField(choices=[('single_cell', 'Single Cell'), ('bulk_rna', 'Bulk RNA'), ('spatial', 'Spatial'), ('multiome', 'Multiome')], default='single_cell', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('input_h5ad_path', models.CharField(blank=True, max_length=500, null=True)),
                ('input_mtx_path', models.CharField(blank=True, max_length=500, null=True)),
                ('input_features_path', models.CharField(blank=True, max_length=500, null=True)),
                ('input_barcodes_path', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='samples', to='projects.project')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StepRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('SUCCEEDED', 'Succeeded'), ('FAILED', 'Failed'), ('CANCELED', 'Canceled')], default='PENDING', max_length=20)),
                ('params_json', models.JSONField(default=dict)),
                ('runner_image_tag', models.CharField(blank=True, max_length=100)),
                ('git_commit_hash', models.CharField(blank=True, max_length=40)),
                ('input_files_hash', models.CharField(blank=True, max_length=64)),
                ('metrics_json', models.JSONField(blank=True, default=dict)),
                ('evidence_json', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('is_pinned', models.BooleanField(default=False)),
                ('parent_run', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_runs', to='projects.steprun')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step_runs', to='projects.sample')),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.step')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Artifact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('artifact_type', models.CharField(choices=[('h5ad', 'AnnData H5AD'), ('csv', 'CSV Table'), ('png', 'PNG Image'), ('pdf', 'PDF Report'), ('json', 'JSON Data'), ('html', 'HTML Report')], max_length=20)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField(default=0)),
                ('file_hash', models.CharField(blank=True, max_length=64)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('step_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artifacts', to='projects.steprun')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Advice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('advice_type', models.CharField(choices=[('parameter_optimization', 'Parameter Optimization'), ('quality_improvement', 'Quality Improvement'), ('method_suggestion', 'Method Suggestion'), ('troubleshooting', 'Troubleshooting')], max_length=30)),
                ('risk_level', models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk')], default='medium', max_length=10)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('evidence_text', models.TextField()),
                ('patch_json', models.JSONField(blank=True, default=dict)),
                ('patch_type', models.CharField(default='params', max_length=20)),
                ('is_applied', models.BooleanField(default=False)),
                ('applied_at', models.DateTimeField(blank=True, null=True)),
                ('rollback_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('applied_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('step_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advice', to='projects.steprun')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
